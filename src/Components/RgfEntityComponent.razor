@if (_initialized && Manager != null)
{
    if (!EntityParameters.FormOnly)
    {
        if (EntityParameters.TitleTemplate != null)
        {
            @EntityParameters.TitleTemplate(Manager)
        }
        <div id="@Manager.EntityDomId"
        class="@($"recro-grid recro-grid-base{(EntityParameters.DisplayMode == RfgDisplayMode.Tree ? " rg-tree" : "")} rg-ent-{Manager.EntityDesc.EntityId}")"
        style="width:fit-content">
            @if (!string.IsNullOrEmpty(Manager.EntityDesc.CRUD))
            {
                @ToolbarTemplate(EntityParameters)
                if (EntityParameters.DisplayMode == RfgDisplayMode.Tree && TreeTemplate != null)
                {
                    @TreeTemplate(EntityParameters)
                }
                else
                {
                    EntityParameters.DisplayMode = RfgDisplayMode.Grid;
                    @GridTemplate(EntityParameters)
                }
                @PagerTemplate(EntityParameters)
                @FilterTemplate(EntityParameters)
            }
            else
            {
                @_recroDict.GetRgfUiString("AccessDenied")
            }
        </div>
    }
    if (_showFormView)
    {
        @FormTemplate(EntityParameters)
    }
    if (_isChartInitialized && ChartTemplate != null)
    {
        @ChartTemplate(EntityParameters)
    }
    if (_entityEditor != null)
    {
        @_entityEditor
    }
}
else if (LoadingIndicator != null && !EntityParameters.DeferredInitialization)
{
    @LoadingIndicator
}

<RgfDynamicDialog @ref="_dynamicDialog" />

@code {

    [Parameter, EditorRequired]
    public RgfEntityParameters EntityParameters { get; set; } = null!;

    [Parameter, EditorRequired]
    public RenderFragment<RgfEntityParameters> ToolbarTemplate { get; set; } = null!;

    [Parameter, EditorRequired]
    public RenderFragment<RgfEntityParameters> GridTemplate { get; set; } = null!;

    [Parameter]
    public RenderFragment<RgfEntityParameters>? TreeTemplate { get; set; }

    [Parameter, EditorRequired]
    public RenderFragment<RgfEntityParameters> FilterTemplate { get; set; } = null!;

    [Parameter, EditorRequired]
    public RenderFragment<RgfEntityParameters> PagerTemplate { get; set; } = null!;

    [Parameter, EditorRequired]
    public RenderFragment<RgfEntityParameters> FormTemplate { get; set; } = null!;

    [Parameter]
    public RenderFragment<RgfEntityParameters>? ChartTemplate { get; set; }

    [Parameter]
    public RenderFragment LoadingIndicator { get; set; } = @<p><em>Loading...</em></p>;
}